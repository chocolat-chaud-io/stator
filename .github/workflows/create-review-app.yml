name: Create review app

on:
  pull_request:

jobs:
  create-review-app:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Setup CI
        uses: ./.github/action-setup-ci
        with:
          github_token: ${{ github.token }}
          nx_cloud_token: ${{ secrets.NX_CLOUD_TOKEN }}

      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

      - name: Inject slug/short variables
        uses: rlespinasse/github-slug-action@v4

      - name: Create DigitalOcean resources
        run: node node_modules/zx/zx.mjs ./.github/workflows/create-digitalocean-review-app-resources.mjs
        env:
          PR_NUMBER: ${{ github.event.number }}
          DOMAIN_NAME: ${{ secrets.DOMAIN_NAME }}
          REPO_NAME: ${{ github.event.pull_request.head.repo.full_name }}
          DIGITALOCEAN_ACCESS_TOKEN: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

      - name: Build affected apps
        run: npm run affected:build -- --prod

      - name: Replace apiUrl in webapp
        run: node node_modules/zx/zx.mjs ./.github/workflows/replace-webapp-api-url-prod-build.mjs
        env:
          DROPLET_URL: ${{ env.DROPLET_URL }}

      - name: Create SSH key files
        run: |
          echo "$DIGITALOCEAN_PRIVATE_SSH_KEY" > id_rsa
          echo "$DIGITALOCEAN_PUBLIC_SSH_KEY" > id_rsa.pub
        env:
          DIGITALOCEAN_PRIVATE_SSH_KEY: ${{ secrets.DIGITALOCEAN_SSH_KEY }}
          DIGITALOCEAN_PUBLIC_SSH_KEY: ${{ secrets.DIGITALOCEAN_SSH_KEY_PUBLIC }}

      - name: Copy SSH keys
        uses: appleboy/scp-action@master
        with:
          host: ${{ env.DROPLET_HOST }}
          username: root
          key: ${{ secrets.DIGITALOCEAN_SSH_KEY }}
          timeout: 5m
          source: "id_rsa,id_rsa.pub"
          target: "~/.ssh"
          overwrite: true

      - name: Copy dist folder
        uses: garygrossgarten/github-action-scp@release
        with:
          local: dist
          remote: dist
          rmRemote: true
          host: ${{ env.DROPLET_HOST }}
          username: root
          privateKey: ${{ secrets.DIGITALOCEAN_SSH_KEY }}

      - name: Execute remote command
        uses: appleboy/ssh-action@master
        with:
          host: ${{ env.DROPLET_HOST }}
          username: root
          key: ${{ secrets.DIGITALOCEAN_SSH_KEY }}
          timeout: 15m
          script: |
            eval `ssh-agent -s`
            ssh-add ~/.ssh/id_rsa
            cd ~
            ssh-keyscan github.com >> ~/.ssh/known_hosts
            rm -rf stator
            git clone git@github.com:chocolat-chaud-io/stator.git
            cd stator
            git checkout ${{ env.GITHUB_HEAD_REF_SLUG }}
            echo "DROPLET_PORT=${{ env.DROPLET_PORT }}" > .env
            docker-compose config
            cp ../dist ./dist -ar
            docker-compose up --build -d

      - name: Wait for review app to be ready
        run: node node_modules/zx/zx.mjs ./.github/workflows/wait-for-review-app-url-to-be-ready.mjs
        env:
         DROPLET_URL: ${{ env.DROPLET_URL }}

      - name: Find deployment comment
        uses: peter-evans/find-comment@v1
        id: pull-request-comment
        with:
          issue-number: ${{ github.event.number }}
          body-includes: Your review app has been

      - name: Delete deployment comment if exists
        if: ${{ !!steps.pull-request-comment.outputs.comment-id }}
        uses: jungwinter/comment@v1
        with:
          type: delete
          comment_id: ${{ steps.pull-request-comment.outputs.comment-id }}
          token: ${{ github.token }}

      - name: Create deployment comment
        uses: jungwinter/comment@v1
        with:
          type: create
          issue_number: ${{ github.event.number }}
          token: ${{ github.token }}
          body: ":rocket: Your review app has been [deployed](${{ env.DROPLET_URL }})"
